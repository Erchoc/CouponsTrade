# 优惠券交易平台

## 一、state结构的定义
- state对象包括四个对象：用户信息(包括用户Token、用户基本信息、用户已经够买的优惠券信息、用户已发布过的优惠券信息)、查询优惠券信息

```
var state={
 用户信息{
     用户Token:"111",
     用户基本信息：{电话号码、邀请人个数、昵称},
     用户已经够买的优惠券信息：
      { 
          查询条件:
          {
             订单状态、名称
          }
          分页信息:
          {
             总数据条数,
             当前加载第几页,
             每次加载多少条,
          },
          优惠券列表的信息:是一个数组
          [{
              ID,
              名称,
              描述,
              价格,
              图片
          },{},{}],
          优惠券详细的信息
          {
             ID、
             优惠券标题、
             区域信息、
             是否支持优惠券未开启时自动退货、
             优惠券类别（中餐、西餐）、
             券码形式选项（图片或文本）、
             券码（图片或文本）、
             卖价、
             原价、
             券面值、
             有效期（区间）、
             图片（与商户相关）、
             优惠券其他内容描述（可消费日期、可消费的时间、商户的信息暂放在此地方）
          }
       },
      
      用户已发布过的优惠券信息：
      { 
          查询条件:
          {
             优惠券状态、名称
          }
          分页信息:
          {
             总数据条数,
             当前加载第几页,
             每次加载多少条,
          },
          优惠券列表的信息:是一个数组
          [{
              ID,
              名称,
              描述,
              价格,
              图片
          },{},{}],
          优惠券详细的信息
          {
             ID、
             优惠券标题、
             区域信息、
             是否支持优惠券未开启时自动退货、
             优惠券类别（中餐、西餐）、
             券码形式选项（图片或文本）、
             券码（图片或文本）、
             卖价、
             原价、
             券面值、
             有效期（区间）、
             图片（与商户相关）、
             优惠券其他内容描述（可消费日期、可消费的时间、商户的信息暂放在此地方）
          }
       }
    },
    
 查询优惠券:
 { 
    查询条件:
    {
       优惠券名称(暂定)
    }
    分页信息:
    {
       总数据条数,
       当前加载第几页,
       每次加载多少条,
    },
    优惠券列表的信息:是一个数组
    [{
        ID,
        名称,
        描述,
        价格,
        图片
    },{},{}],
    优惠券详细的信息
    {
            ID、
            优惠券标题、
            区域信息、
            是否支持优惠券未开启时自动退货、
            优惠券类别（中餐、西餐）、
            券码形式选项（图片或文本）、
            券码（图片或文本）、
            卖价、
            原价、
            券面值、
            有效期（区间）、
            图片（与商户相关）、
            优惠券其他内容描述（可消费日期、可消费的时间、商户的信息暂放在此地方）
         }
 }
}
```

## 二、何时会操作state

- 详细分析优惠券交易平台项目操作中从state里面**存和取**数据。

### 登陆

- 需要**查询**验证“state中用户信息的Token”与“服务器返回的Token”是否一致
- state.用户信息.用户Token  

### 注册

- 无

### 购买优惠券   

- 描述：用户购买优惠券需要操作state的地方

#### 加载平台首页  

- 需要**查询**state中的“查询优惠券”中部分数据（待定）
- 操作的state为
  - state.查询优惠券.查询条件
  - state.查询优惠券.分页信息
  - state.查询优惠券.优惠券列表的信息

#### 查询优惠券

- 需要**查询**state中的“查询优惠券”中的部分数据（待定）
- 操作的state为
  - state.查询优惠券.查询条件
  - state.查询优惠券.分页信息
  - state.查询优惠券.优惠券列表的信息

#### 查看优惠券详情

- 需要查询state中的“查询优惠券”中的部分数据
- 操作的state为
  - state.查询优惠券.优惠券详细的信息.所有信息

#### 购买优惠券

- 需要查询state中的“查询优惠券”中的部分数据
- 操作的state为
  - state.查询优惠券.优惠券详细的信息.ID

#### 支付订单

#### 查看订单



### 发布优惠券

#### 　发布优惠券

#### 查看已发布优惠券列表

#### 查看优惠券详情

#### 编辑优惠券

#### 下架优惠券





## 三、state的结构分析

- 优惠券交易平台系统的state应该如何存储数据，该文档定义state的结构进行定义

### 1、登陆

  - 传入的数据(向后台发送的数据)：用户名、密码
  - 返回数据：只有一个Token
  - 注：Token是用户的唯一标识，通过它就不用每次发送个人信息，需要身份验证时需要该Token  
  - 请求用户信息时，需要返回的数据：
  user基本信息
    {
      电话号码、邀请人个数、昵称
    }

### 2、注册
  - 传入数据：昵称、手机号、验证码（只录入模拟验证码）、密码、邀请码
  - 返回数据：消息结果
  
### 3、查询
  - 优惠券列表信息（一个数组包括多个对象）:查询条件(优惠券名称)、分页信息（总数据条数，当前加载第几页，每次加载多少条）
  - 请求回来的数据是一个数组包含多个对象。  

CouponsTrade:[
{ 
   查询条件:
   {
      优惠券名称(暂定)
   }
   分页信息:
   {
      总数据条数,
      当前加载第几页,
      每次加载多少条,
   },
   优惠券列表的信息
   {
       ID,
       名称,
       描述,
       价格,
       图片
   },
   优惠券详细的信息
   {
      ID、
      优惠券标题、
      区域信息、
      是否支持优惠券未开启时自动退货、
      优惠券类别（中餐、西餐）、
      券码形式选项（图片或文本）、
      券码（图片或文本）、
      卖价、
      原价、
      券面值、
      有效期（区间）、
      图片（与商户相关）、
      优惠券其他内容描述（可消费日期、可消费的时间、商户的信息暂放在此地方）
   }
},{},{},{},{}

]

### 4、用户订单信息  

用户已经够买的优惠券信息：是一个数组存了多个对象
[
   {
      查询条件：{订单状态、名称},
      分页信息: {总数据条数,当前加载第几页,每次加载多少条},
      优惠券列表的信息：{ID,名称,描述,价格,图片},
      优惠券详细的信息
      {
             ID、
             优惠券标题、
             区域信息、
             是否支持优惠券未开启时自动退货、
             优惠券类别（中餐、西餐）、
             券码形式选项（图片或文本）、
             券码（图片或文本）、
             卖价、
             原价、
             券面值、
             有效期（区间）、
             图片（与商户相关）、
             优惠券其他内容描述（可消费日期、可消费的时间、商户的信息暂放在此地方）
      }
          
   },{}，{}，{}，{}
]

### 5、用户所有发布优惠券信息  

用户已发布过的优惠券信息：是一个数组存了多个对象
[
   {
      查询条件：{优惠券的状态、名称},
      分页信息: {总数据条数,当前加载第几页,每次加载多少条},
      优惠券列表的信息：{ID,名称,描述,价格,图片},
      优惠券详细的信息:
            {
                   ID、
                   优惠券标题、
                   区域信息、
                   是否支持优惠券未开启时自动退货、
                   优惠券类别（中餐、西餐）、
                   券码形式选项（图片或文本）、
                   券码（图片或文本）、
                   卖价、
                   原价、
                   券面值、
                   有效期（区间）、
                   图片（与商户相关）、
                   优惠券其他内容描述（可消费日期、可消费的时间、商户的信息暂放在此地方）
            },

   },{}，{}，{}，{}
]


### 6、消息的不同类型
  - 需要用户确认，包括确定、取消两个按钮
  - 需要用户确认，包括确定按钮
  - 单纯的通知，没有按钮



## 本次讨论注意事项  

### 1. BackButton按钮
- 描述BackButton按钮不能用太多，防止退回到某个编辑页面，如：支付页面


